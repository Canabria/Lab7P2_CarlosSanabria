
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP1
 */
public class Startup extends javax.swing.JFrame {

    /**
     * Creates new form Startup
     */
    public Startup() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JD_Artistas = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        TF_Nombre = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        TF_GeneroM = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TF_N_Disco = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        TF_Alias = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        RB_instru = new javax.swing.JRadioButton();
        RB_voz = new javax.swing.JRadioButton();
        JB_AArtista = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JL_Artista = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        JB_ModificarArtista = new javax.swing.JButton();
        JB_EliminarArtista = new javax.swing.JButton();
        Tipo_de_musica = new javax.swing.ButtonGroup();
        JD_Albums = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        TF_GeneroM1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        RB_digital = new javax.swing.JRadioButton();
        TF_Alias1 = new javax.swing.JTextField();
        RB_CD = new javax.swing.JRadioButton();
        TF_Nombre1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        TF_Fecha_p = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        JL_Artista1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        JL_Albums = new javax.swing.JList<>();
        JB_AgregarAlbumaA = new javax.swing.JButton();
        JB_AgregarAlbums = new javax.swing.JButton();
        JB_ModificarAlbums = new javax.swing.JButton();
        JB_EliminarAlbums = new javax.swing.JButton();
        JB_ModificarAlbums_d_A = new javax.swing.JButton();
        JB_EliminarAlbums_d_A = new javax.swing.JButton();
        Formato_p = new javax.swing.ButtonGroup();
        JD_Canciones = new javax.swing.JDialog();
        TF_NombreD = new javax.swing.JTextField();
        RB_exNo = new javax.swing.JRadioButton();
        TF_Nombre2 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        TF_NombreC = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        TF_DuracionC = new javax.swing.JTextField();
        RB_exSi = new javax.swing.JRadioButton();
        jLabel29 = new javax.swing.JLabel();
        TF_NombreP = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        RB_extraSi1 = new javax.swing.JRadioButton();
        RB_extraNo1 = new javax.swing.JRadioButton();
        JB_Agregar_Cancion = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        JL_Canciones = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        JL_Artistas2 = new javax.swing.JList<>();
        JB_AgregarCancionaA1 = new javax.swing.JButton();
        JB_ModificarCaciones = new javax.swing.JButton();
        JB_EliminarCanciones = new javax.swing.JButton();
        JB_ModificarArtista4 = new javax.swing.JButton();
        JB_EliminarArtista4 = new javax.swing.JButton();
        Exclusivo = new javax.swing.ButtonGroup();
        ArtistasExtra = new javax.swing.ButtonGroup();
        JD_ListaPlaylist = new javax.swing.JDialog();
        jScrollPane6 = new javax.swing.JScrollPane();
        JL_PlayList = new javax.swing.JList<>();
        CB_generos = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        JB_simula = new javax.swing.JButton();
        JB_SalirSys = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        JB_Artistas = new javax.swing.JButton();
        JB_Albums = new javax.swing.JButton();
        JB_Canciones = new javax.swing.JButton();
        JB_PlayList = new javax.swing.JButton();

        JD_Artistas.setTitle("Artistas");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Artistas");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setText("Nombre de la disquera: ");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel16.setText("Nombre:");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel17.setText("Alias:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel18.setText("Tipo de Musica: ");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Genero de musica: ");

        Tipo_de_musica.add(RB_instru);
        RB_instru.setText("Instrumental");

        Tipo_de_musica.add(RB_voz);
        RB_voz.setText("De voz");

        JB_AArtista.setText("Agregar Artista");
        JB_AArtista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_AArtistaMouseClicked(evt);
            }
        });

        JL_Artista.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(JL_Artista);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Lista de Artistas en el sistema: ");

        JB_ModificarArtista.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_ModificarArtista.setText("Modificar Artista");
        JB_ModificarArtista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_ModificarArtistaMouseClicked(evt);
            }
        });

        JB_EliminarArtista.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_EliminarArtista.setText("Eliminar Artista");
        JB_EliminarArtista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_EliminarArtistaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout JD_ArtistasLayout = new javax.swing.GroupLayout(JD_Artistas.getContentPane());
        JD_Artistas.getContentPane().setLayout(JD_ArtistasLayout);
        JD_ArtistasLayout.setHorizontalGroup(
            JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JD_ArtistasLayout.createSequentialGroup()
                .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_ArtistasLayout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel2))
                    .addGroup(JD_ArtistasLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(JB_AArtista, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(JD_ArtistasLayout.createSequentialGroup()
                .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_ArtistasLayout.createSequentialGroup()
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addGap(55, 55, 55)
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TF_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TF_GeneroM, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(JD_ArtistasLayout.createSequentialGroup()
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TF_Alias, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TF_N_Disco, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(JD_ArtistasLayout.createSequentialGroup()
                                .addComponent(RB_instru)
                                .addGap(18, 18, 18)
                                .addComponent(RB_voz)))))
                .addGap(88, 88, 88)
                .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JD_ArtistasLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(JB_ModificarArtista)
                .addGap(38, 38, 38)
                .addComponent(JB_EliminarArtista)
                .addGap(46, 46, 46))
        );
        JD_ArtistasLayout.setVerticalGroup(
            JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JD_ArtistasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_ArtistasLayout.createSequentialGroup()
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TF_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(TF_GeneroM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(TF_N_Disco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(TF_Alias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(RB_instru)
                            .addComponent(RB_voz))
                        .addGap(18, 18, 18)
                        .addComponent(JB_AArtista))
                    .addGroup(JD_ArtistasLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(JD_ArtistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JB_ModificarArtista)
                    .addComponent(JB_EliminarArtista))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Albums");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel19.setText("Alias:");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel20.setText("Formato de publicacion: ");

        Formato_p.add(RB_digital);
        RB_digital.setText("Digital");

        Formato_p.add(RB_CD);
        RB_CD.setText("CD");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel21.setText("Genero de musica: ");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel22.setText("Fecha de producion: ");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel23.setText("Nombre:");

        JL_Artista1.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(JL_Artista1);

        JL_Albums.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(JL_Albums);

        JB_AgregarAlbumaA.setText("---->");
        JB_AgregarAlbumaA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_AgregarAlbumaAMouseClicked(evt);
            }
        });

        JB_AgregarAlbums.setText("Agregar Albums");
        JB_AgregarAlbums.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_AgregarAlbumsMouseClicked(evt);
            }
        });

        JB_ModificarAlbums.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_ModificarAlbums.setText("Modificar Albums");
        JB_ModificarAlbums.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_ModificarAlbumsMouseClicked(evt);
            }
        });

        JB_EliminarAlbums.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_EliminarAlbums.setText("Eliminar Albums");
        JB_EliminarAlbums.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_EliminarAlbumsMouseClicked(evt);
            }
        });

        JB_ModificarAlbums_d_A.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_ModificarAlbums_d_A.setText("Modificar Albums del Artistas");
        JB_ModificarAlbums_d_A.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_ModificarAlbums_d_AMouseClicked(evt);
            }
        });

        JB_EliminarAlbums_d_A.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_EliminarAlbums_d_A.setText("Eliminar Albums del Artista");
        JB_EliminarAlbums_d_A.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_EliminarAlbums_d_AMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout JD_AlbumsLayout = new javax.swing.GroupLayout(JD_Albums.getContentPane());
        JD_Albums.getContentPane().setLayout(JD_AlbumsLayout);
        JD_AlbumsLayout.setHorizontalGroup(
            JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JD_AlbumsLayout.createSequentialGroup()
                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_AlbumsLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JD_AlbumsLayout.createSequentialGroup()
                        .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(JB_ModificarAlbums)
                                .addGap(38, 38, 38)
                                .addComponent(JB_EliminarAlbums)
                                .addGap(81, 81, 81))
                            .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel22)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel19))
                                        .addGap(41, 41, 41)
                                        .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TF_Alias1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TF_Nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(TF_GeneroM1)
                                                .addComponent(TF_Fecha_p, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                                .addComponent(RB_digital)
                                                .addGap(18, 18, 18)
                                                .addComponent(RB_CD))))
                                    .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                        .addGap(171, 171, 171)
                                        .addComponent(JB_AgregarAlbums, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(JB_AgregarAlbumaA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                .addComponent(JB_ModificarAlbums_d_A)
                                .addGap(38, 38, 38)
                                .addComponent(JB_EliminarAlbums_d_A))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        JD_AlbumsLayout.setVerticalGroup(
            JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JD_AlbumsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(13, 13, 13)
                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_AlbumsLayout.createSequentialGroup()
                        .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TF_Nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23))
                                .addGap(14, 14, 14)
                                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(TF_Fecha_p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(TF_GeneroM1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel20)
                                            .addComponent(RB_digital)
                                            .addComponent(RB_CD)))
                                    .addGroup(JD_AlbumsLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(JB_AgregarAlbumaA)))
                                .addGap(18, 18, 18)
                                .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TF_Alias1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19))
                                .addGap(18, 18, 18)
                                .addComponent(JB_AgregarAlbums))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(JD_AlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JB_ModificarAlbums)
                            .addComponent(JB_EliminarAlbums)
                            .addComponent(JB_ModificarAlbums_d_A)
                            .addComponent(JB_EliminarAlbums_d_A)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(184, Short.MAX_VALUE))
        );

        Exclusivo.add(RB_exNo);
        RB_exNo.setText("No");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel24.setText("Nombre compositor: ");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Canciones");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel25.setText("Duración de la cancion: ");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel26.setText("Nombre:");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel27.setText("Nombre distribuidor: ");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel28.setText("Exclusivo:");

        Exclusivo.add(RB_exSi);
        RB_exSi.setText("Si");

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel29.setText("Nombre de productor: ");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel30.setText("Hay artistas adicionales?");

        ArtistasExtra.add(RB_extraSi1);
        RB_extraSi1.setText("Si");

        ArtistasExtra.add(RB_extraNo1);
        RB_extraNo1.setSelected(true);
        RB_extraNo1.setText("No");

        JB_Agregar_Cancion.setText("Agregar");
        JB_Agregar_Cancion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_Agregar_CancionMouseClicked(evt);
            }
        });

        JL_Canciones.setModel(new DefaultListModel());
        jScrollPane4.setViewportView(JL_Canciones);

        JL_Artistas2.setModel(new DefaultListModel());
        jScrollPane5.setViewportView(JL_Artistas2);

        JB_AgregarCancionaA1.setText("---->");
        JB_AgregarCancionaA1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_AgregarCancionaA1MouseClicked(evt);
            }
        });

        JB_ModificarCaciones.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_ModificarCaciones.setText("Modificar Canciones");
        JB_ModificarCaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_ModificarCacionesMouseClicked(evt);
            }
        });

        JB_EliminarCanciones.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_EliminarCanciones.setText("Eliminar Canciones");
        JB_EliminarCanciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_EliminarCancionesMouseClicked(evt);
            }
        });

        JB_ModificarArtista4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_ModificarArtista4.setText("Modificar Caciones del Artista");
        JB_ModificarArtista4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_ModificarArtista4MouseClicked(evt);
            }
        });

        JB_EliminarArtista4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JB_EliminarArtista4.setText("Eliminar Canciones del Artista");
        JB_EliminarArtista4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_EliminarArtista4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout JD_CancionesLayout = new javax.swing.GroupLayout(JD_Canciones.getContentPane());
        JD_Canciones.getContentPane().setLayout(JD_CancionesLayout);
        JD_CancionesLayout.setHorizontalGroup(
            JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JD_CancionesLayout.createSequentialGroup()
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(JB_Agregar_Cancion, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(JD_CancionesLayout.createSequentialGroup()
                                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28))
                                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(RB_exSi)
                                        .addGap(18, 18, 18)
                                        .addComponent(RB_exNo))
                                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(TF_NombreD, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JD_CancionesLayout.createSequentialGroup()
                                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel30))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                                        .addComponent(RB_extraSi1)
                                        .addGap(18, 18, 18)
                                        .addComponent(RB_extraNo1))
                                    .addComponent(TF_NombreP, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JB_AgregarCancionaA1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125))
                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                        .addComponent(JB_ModificarCaciones)
                        .addGap(38, 38, 38)
                        .addComponent(JB_EliminarCanciones)
                        .addGap(169, 169, 169)
                        .addComponent(JB_ModificarArtista4)
                        .addGap(33, 33, 33)
                        .addComponent(JB_EliminarArtista4, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))))
            .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JD_CancionesLayout.createSequentialGroup()
                    .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(JD_CancionesLayout.createSequentialGroup()
                            .addGap(260, 260, 260)
                            .addComponent(jLabel5))
                        .addGroup(JD_CancionesLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel24)
                                .addComponent(jLabel25)
                                .addComponent(jLabel26))
                            .addGap(47, 47, 47)
                            .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TF_Nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TF_NombreC)
                                    .addComponent(TF_DuracionC, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap(1178, Short.MAX_VALUE)))
        );
        JD_CancionesLayout.setVerticalGroup(
            JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JD_CancionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(TF_NombreD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(RB_exSi)
                    .addComponent(RB_exNo))
                .addGap(25, 25, 25)
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(TF_NombreP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(RB_extraSi1)
                    .addComponent(RB_extraNo1))
                .addGap(27, 27, 27)
                .addComponent(JB_Agregar_Cancion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
            .addGroup(JD_CancionesLayout.createSequentialGroup()
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_CancionesLayout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(JB_AgregarCancionaA1))
                    .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(JD_CancionesLayout.createSequentialGroup()
                            .addGap(78, 78, 78)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JD_CancionesLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JB_ModificarArtista4)
                        .addComponent(JB_EliminarArtista4))
                    .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JB_EliminarCanciones)
                        .addComponent(JB_ModificarCaciones)))
                .addContainerGap(180, Short.MAX_VALUE))
            .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JD_CancionesLayout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jLabel5)
                    .addGap(43, 43, 43)
                    .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TF_Nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26))
                    .addGap(14, 14, 14)
                    .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25)
                        .addComponent(TF_DuracionC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(JD_CancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(TF_NombreC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(431, Short.MAX_VALUE)))
        );

        JL_PlayList.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(JL_PlayList);

        CB_generos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CB_generosItemStateChanged(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout JD_ListaPlaylistLayout = new javax.swing.GroupLayout(JD_ListaPlaylist.getContentPane());
        JD_ListaPlaylist.getContentPane().setLayout(JD_ListaPlaylistLayout);
        JD_ListaPlaylistLayout.setHorizontalGroup(
            JD_ListaPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JD_ListaPlaylistLayout.createSequentialGroup()
                .addGroup(JD_ListaPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JD_ListaPlaylistLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JD_ListaPlaylistLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(CB_generos, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JD_ListaPlaylistLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(246, 246, 246))
        );
        JD_ListaPlaylistLayout.setVerticalGroup(
            JD_ListaPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JD_ListaPlaylistLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(CB_generos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addGap(41, 41, 41))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Start up");

        JB_simula.setText("Simulacion");

        JB_SalirSys.setText("Salir de sistema");
        JB_SalirSys.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_SalirSysMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Bienvenidos al sistema: ");

        jToolBar1.setRollover(true);

        JB_Artistas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        JB_Artistas.setText("Artistas");
        JB_Artistas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_ArtistasMouseClicked(evt);
            }
        });
        jToolBar1.add(JB_Artistas);

        JB_Albums.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        JB_Albums.setText("Albums");
        JB_Albums.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_AlbumsMouseClicked(evt);
            }
        });
        jToolBar1.add(JB_Albums);

        JB_Canciones.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        JB_Canciones.setText("Canciones");
        JB_Canciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_CancionesMouseClicked(evt);
            }
        });
        jToolBar1.add(JB_Canciones);

        JB_PlayList.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        JB_PlayList.setText("Playlist");
        JB_PlayList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_PlayListMouseClicked(evt);
            }
        });
        jToolBar1.add(JB_PlayList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(JB_simula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JB_SalirSys)
                        .addGap(58, 58, 58)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(58, 58, 58)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JB_simula)
                    .addComponent(JB_SalirSys))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JB_AArtistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_AArtistaMouseClicked
        // TODO add your handling code here:
        String t="";
        if(RB_instru.isSelected()){
            t="Instrumental";
        }else{
            t="Su voz";
        }
         Artista a = new Artista(TF_Nombre.getText(),TF_GeneroM.getText(),TF_N_Disco.getText(),TF_Alias.getText(),t
                );
    
        Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        ap.cargarArchivo();
        ap.setArtistas(a);
        ap.escribirArchivo();
        JOptionPane.showMessageDialog(this,
                "Artista guardado exsitosamente");
         DefaultListModel modelo = (DefaultListModel) JL_Artista.getModel();
        modelo.addElement(a);
        JL_Artista.setModel(modelo);
        JL_Artista1.setModel(modelo);
        JL_Artistas2.setModel(modelo);
        TF_Nombre.setText("");
        TF_GeneroM.setText("");
        TF_GeneroM.setText("");
        TF_N_Disco.setText("");
        TF_Alias.setText("");
        RB_instru.setSelected(false);
        RB_voz.setSelected(true);
    }//GEN-LAST:event_JB_AArtistaMouseClicked

    private void JB_SalirSysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_SalirSysMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_JB_SalirSysMouseClicked

    private void JB_ArtistasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_ArtistasMouseClicked
        // TODO add your handling code here:
        JDArtista();
    }//GEN-LAST:event_JB_ArtistasMouseClicked

    private void JB_AgregarAlbumsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_AgregarAlbumsMouseClicked
        // TODO add your handling code here:
        String t="";
        if(RB_digital.isSelected()){
            t="Digital";
        }else{
            t="CD";
        }
         Albums a = new Albums(TF_Nombre1.getText(),TF_Fecha_p.getText(),TF_GeneroM1.getText(),t,TF_Alias1.getText()
                );

        JOptionPane.showMessageDialog(this,
                "Album guardado exsitosamente");
         DefaultListModel modelo = (DefaultListModel) JL_Albums.getModel();
        modelo.addElement(a);
        JL_Albums.setModel(modelo);
        TF_Nombre1.setText("");
        TF_GeneroM1.setText("");
        TF_Fecha_p.setText("");
        TF_Alias1.setText("");
        RB_digital.setSelected(false);
        RB_CD.setSelected(true);
    }//GEN-LAST:event_JB_AgregarAlbumsMouseClicked

    private void JB_AgregarAlbumaAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_AgregarAlbumaAMouseClicked
        // TODO add your handling code here:
       
        DefaultListModel modelo = (DefaultListModel) JL_Albums.getModel();
        int t1=JL_Artista1.getSelectedIndex();
        int t2=JL_Albums.getSelectedIndex();
        Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        ap.cargarArchivo();
            Albums a=(Albums)modelo.get(t2);
                    /*
                    ar.getListaArtistas().get(p).setAlias(JOptionPane.showInputDialog("Alias del Artista: "));
                    ((Artistas) modeloLISTA.get(JL_ListarArtista.getSelectedIndex())).setNombre(ar.getListaArtistas().get(p).getNombre());
                    */
            ap.getListaArtistas().get(t1).getA().add(a);
            ap.escribirArchivo();
            DefaultListModel modelo1 = (DefaultListModel) JL_Artista1.getModel();
           ((Artista) modelo1.get(t1)).getA().add(a);
           JL_Artista1.setModel(modelo1);
           JL_Artista.setModel(modelo1);
           String tt1="";
           for (int i = 0; i < ap.getListaArtistas().get(t1).getA().size(); i++) {
            tt1+=i+". "+ap.getListaArtistas().get(t1).getA().get(i)+"\n";
        }
        JOptionPane.showMessageDialog(JD_Canciones,"Los Albumenes de este Artista son: \n"+tt1);
    }//GEN-LAST:event_JB_AgregarAlbumaAMouseClicked

    private void JB_AlbumsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_AlbumsMouseClicked
        // TODO add your handling code here:
        JDALBUMS();
    }//GEN-LAST:event_JB_AlbumsMouseClicked

    private void JB_ModificarArtistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_ModificarArtistaMouseClicked
        Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        int p;
        p =JL_Artista.getSelectedIndex();

        ap.cargarArchivo();
        ap.getListaArtistas().get(p).setAlias(JOptionPane.showInputDialog("Alias del Artista: "));
        ap.getListaArtistas().get(p).setGeneroM(JOptionPane.showInputDialog("Genero Musical: "));
        ap.getListaArtistas().get(p).setNom_disco(JOptionPane.showInputDialog("Nombre de la Discografica: "));
        ap.getListaArtistas().get(p).setNombre(JOptionPane.showInputDialog("Nombre del Artista: "));
        ap.getListaArtistas().get(p).setTipoM(JOptionPane.showInputDialog("Tipo de Musica: "));
        ap.escribirArchivo();

        DefaultListModel modeloLISTA = (DefaultListModel) JL_Artista.getModel();
        ((Artista) modeloLISTA.get(JL_Artista.getSelectedIndex())).setNombre(ap.getListaArtistas().get(p).getNombre());
        ((Artista) modeloLISTA.get(JL_Artista.getSelectedIndex())).setAlias(ap.getListaArtistas().get(p).getAlias());
        ((Artista) modeloLISTA.get(JL_Artista.getSelectedIndex())).setNom_disco(ap.getListaArtistas().get(p).getNom_disco());
        ((Artista) modeloLISTA.get(JL_Artista.getSelectedIndex())).setGeneroM(ap.getListaArtistas().get(p).getGeneroM());
        ((Artista) modeloLISTA.get(JL_Artista.getSelectedIndex())).setTipoM(ap.getListaArtistas().get(p).getTipoM());

        JL_Artista.setModel(modeloLISTA);
        JL_Artista1.setModel(modeloLISTA);
        JL_Artistas2.setModel(modeloLISTA);
    }//GEN-LAST:event_JB_ModificarArtistaMouseClicked

    private void JB_EliminarArtistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_EliminarArtistaMouseClicked
        // TODO add your handling code here:
        Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        int p;
        p= JL_Artista.getSelectedIndex();

        ap.cargarArchivo();
        ap.getListaArtistas().remove(p);
        ap.escribirArchivo();

        DefaultListModel modeloLISTA = (DefaultListModel) JL_Artista.getModel();
        modeloLISTA.removeElementAt(p);
        JL_Artista.setModel(modeloLISTA);
        JL_Artista1.setModel(modeloLISTA);
        JL_Artistas2.setModel(modeloLISTA);
    }//GEN-LAST:event_JB_EliminarArtistaMouseClicked

    private void JB_ModificarAlbumsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_ModificarAlbumsMouseClicked
        // TODO add your handling code here:
        
        DefaultListModel modeloLISTA = (DefaultListModel) JL_Albums.getModel();
        ((Albums) modeloLISTA.get(JL_Albums.getSelectedIndex())).setNombre(JOptionPane.showInputDialog("Nombre: "));
        ((Albums) modeloLISTA.get(JL_Albums.getSelectedIndex())).setAliasp(JOptionPane.showInputDialog("Alias del Productor: "));
        ((Albums) modeloLISTA.get(JL_Albums.getSelectedIndex())).setFecha_p(JOptionPane.showInputDialog("Fecha de Producion: "));
        ((Albums) modeloLISTA.get(JL_Albums.getSelectedIndex())).setGeneroM(JOptionPane.showInputDialog("Genero de Musica: "));
        ((Albums) modeloLISTA.get(JL_Albums.getSelectedIndex())).setFormat(JOptionPane.showInputDialog("Formato de Publición: (CD/Digital)"));

        JL_Albums.setModel(modeloLISTA);
    }//GEN-LAST:event_JB_ModificarAlbumsMouseClicked

    private void JB_EliminarAlbumsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_EliminarAlbumsMouseClicked
        // TODO add your handling code here:
        int p;
        p= JL_Artista.getSelectedIndex();


        DefaultListModel modeloLISTA = (DefaultListModel) JL_Albums.getModel();
        modeloLISTA.removeElementAt(p);
        JL_Albums.setModel(modeloLISTA);

    }//GEN-LAST:event_JB_EliminarAlbumsMouseClicked

    private void JB_ModificarAlbums_d_AMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_ModificarAlbums_d_AMouseClicked
        // TODO add your handling code here:
        Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        int t1=JL_Artista1.getSelectedIndex();
        int p;
        String t="";
        for (int i = 0; i < ap.getListaArtistas().get(t1).getA().size(); i++) {
            t+=i+". "+ap.getListaArtistas().get(t1).getA().get(i)+"\n";
        }
        p =Integer.parseInt(JOptionPane.showInputDialog(JD_Canciones,"Los Albumenes de este Artista son: \n"+t));

        ap.cargarArchivo();
        ap.getListaArtistas().get(t1).getA().get(p).setAliasp(JOptionPane.showInputDialog("Alias del Productor: "));
        ap.getListaArtistas().get(t1).getA().get(p).setNombre(JOptionPane.showInputDialog("Nombre: "));
        ap.getListaArtistas().get(t1).getA().get(p).setFecha_p(JOptionPane.showInputDialog("Fecha de Producion: "));
        ap.getListaArtistas().get(t1).getA().get(p).setGeneroM(JOptionPane.showInputDialog("Genero de Musica: "));
        ap.getListaArtistas().get(t1).getA().get(p).setFormat(JOptionPane.showInputDialog("Formato de Publición: (CD/Digital)"));
        ap.escribirArchivo();
        DefaultListModel modeloLISTA = (DefaultListModel) JL_Artista1.getModel();
        ((Artista) modeloLISTA.get(JL_Artista1.getSelectedIndex())).getA().get(p).getAliasp();
        ((Artista) modeloLISTA.get(JL_Artista1.getSelectedIndex())).getA().get(p).getNombre();
        ((Artista) modeloLISTA.get(JL_Artista1.getSelectedIndex())).getA().get(p).getFecha_p();
        ((Artista) modeloLISTA.get(JL_Artista1.getSelectedIndex())).getA().get(p).getGeneroM();
        ((Artista) modeloLISTA.get(JL_Artista1.getSelectedIndex())).getA().get(p).getFormat();
        JL_Artista.setModel(modeloLISTA);
        JL_Artista1.setModel(modeloLISTA);
        JL_Artistas2.setModel(modeloLISTA);
    }//GEN-LAST:event_JB_ModificarAlbums_d_AMouseClicked

    private void JB_EliminarAlbums_d_AMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_EliminarAlbums_d_AMouseClicked
        // TODO add your handling code here:
         Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
         int t1=JL_Artista1.getSelectedIndex();
         int p;
          String t="";
        for (int i = 0; i < ap.getListaArtistas().get(t1).getA().size(); i++) {
            t+=i+". "+ap.getListaArtistas().get(t1).getA().get(i)+"\n";
        }
        p =Integer.parseInt(JOptionPane.showInputDialog(JD_Canciones,"Los Albumenes de este Artista son: \n"+t));
        ap.cargarArchivo();
        ap.getListaArtistas().remove(p);
        ap.escribirArchivo();
         DefaultListModel modeloLISTA = (DefaultListModel) JL_Artista1.getModel();
       ((Artista) modeloLISTA.get(JL_Artista1.getSelectedIndex())).getA().remove(p);
       JL_Artista.setModel(modeloLISTA);
        JL_Artista1.setModel(modeloLISTA);
        JL_Artistas2.setModel(modeloLISTA);
    }//GEN-LAST:event_JB_EliminarAlbums_d_AMouseClicked

    private void JB_AgregarCancionaA1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_AgregarCancionaA1MouseClicked
        // TODO add your handling code here:
         DefaultListModel modelo = (DefaultListModel) JL_Canciones.getModel();
        int t1=JL_Artistas2.getSelectedIndex();
        int t2=JL_Canciones.getSelectedIndex();
        Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        ap.cargarArchivo();
        String t="";
        for (int i = 0; i < ap.getListaArtistas().get(t1).getA().size(); i++) {
            t+=i+". "+ap.getListaArtistas().get(t1).getA().get(i)+"\n";
        }
        int n=Integer.parseInt(JOptionPane.showInputDialog(JD_Canciones,"Los Albumenes de este Artista son: \n"+t));
            Canciones e=(Canciones)modelo.get(t2);
                    /*
                    ar.getListaArtistas().get(p).setAlias(JOptionPane.showInputDialog("Alias del Artista: "));
                    ((Artistas) modeloLISTA.get(JL_ListarArtista.getSelectedIndex())).setNombre(ar.getListaArtistas().get(p).getNombre());
                    */
            ap.getListaArtistas().get(t1).getA().get(n).getC().add(e);
            ap.escribirArchivo();
            DefaultListModel modelo1 = (DefaultListModel) JL_Artistas2.getModel();
           ((Artista) modelo1.get(t1)).getA().get(n).getC().add(e);
           JL_Artistas2.setModel(modelo1);
           JL_Artista1.setModel(modelo1);
           JL_Artista.setModel(modelo1);
           String tt1="";
        for (int i = 0; i < ap.getListaArtistas().get(t1).getA().get(n).getC().size(); i++) {
            tt1+=i+". "+ap.getListaArtistas().get(t1).getA().get(n).getC().get(i)+"\n";
        }
        JOptionPane.showMessageDialog(JD_Canciones,"Los Caciones en el Album: "+ap.getListaArtistas().get(t1).getA().get(n)+"de este Artista son: \n"+tt1);
    }//GEN-LAST:event_JB_AgregarCancionaA1MouseClicked

    private void JB_Agregar_CancionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Agregar_CancionMouseClicked
        // TODO add your handling code here:
        String t="";
        if(RB_exSi.isSelected()){
            t="Si";
        }else{
            t="No";
        }
        ArrayList<String>extra=new ArrayList();
        if(RB_extraSi1.isSelected()){
            boolean f=true;
            while(f){
                extra.add(JOptionPane.showInputDialog(JD_Canciones, "Ingrese el nombre del artista adicional: "));
                String m=JOptionPane.showInputDialog(JD_Canciones, "Tiene quiere agregar otro artista: (Si/No)");
                if(m.equalsIgnoreCase("No")){
                    f=false;
                }
            }
        }
        int sec=Integer.parseInt(TF_DuracionC.getText());
         Canciones a = new Canciones(TF_Nombre2.getText(),sec,TF_NombreC.getText(),TF_NombreD.getText(),t,TF_NombreP.getText(),extra
                );

        JOptionPane.showMessageDialog(this,
                "Cancion guardado exsitosamente");
         DefaultListModel modelo = (DefaultListModel) JL_Canciones.getModel();
        modelo.addElement(a);
        JL_Canciones.setModel(modelo);
        TF_Nombre2.setText("");
        TF_DuracionC.setText("");
        TF_NombreC.setText("");
        TF_NombreD.setText("");
        TF_NombreP.setText("");
        RB_exSi.setSelected(false);
        RB_exNo.setSelected(true);
        RB_extraSi1.setSelected(false);
        RB_extraNo1.setSelected(true);
    }//GEN-LAST:event_JB_Agregar_CancionMouseClicked

    private void JB_ModificarCacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_ModificarCacionesMouseClicked
        // TODO add your handling code here:
         DefaultListModel modeloLISTA = (DefaultListModel) JL_Canciones.getModel();
        ((Albums) modeloLISTA.get(JL_Artista.getSelectedIndex())).setNombre(JOptionPane.showInputDialog("Nombre: "));
        ((Albums) modeloLISTA.get(JL_Artista.getSelectedIndex())).setAliasp(JOptionPane.showInputDialog("Alias del Productor: "));
        ((Albums) modeloLISTA.get(JL_Artista.getSelectedIndex())).setFecha_p(JOptionPane.showInputDialog("Fecha de Producion: "));
        ((Albums) modeloLISTA.get(JL_Artista.getSelectedIndex())).setGeneroM(JOptionPane.showInputDialog("Genero de Musica: "));
        ((Albums) modeloLISTA.get(JL_Artista.getSelectedIndex())).setFormat(JOptionPane.showInputDialog("Formato de Publición: (CD/Digital)"));

        JL_Albums.setModel(modeloLISTA);
    }//GEN-LAST:event_JB_ModificarCacionesMouseClicked

    private void JB_EliminarCancionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_EliminarCancionesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JB_EliminarCancionesMouseClicked

    private void JB_ModificarArtista4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_ModificarArtista4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JB_ModificarArtista4MouseClicked

    private void JB_EliminarArtista4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_EliminarArtista4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JB_EliminarArtista4MouseClicked

    private void CB_generosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CB_generosItemStateChanged
        // TODO add your handling code here:
        DefaultComboBoxModel modelo =(DefaultComboBoxModel) CB_generos.getModel();
         if (evt.getStateChange() == 2) {
              Administrar_Playlist ap = new Administrar_Playlist("./Playlist.cana");
              ap.cargarArchivo();
               Administrar_Artistas aa = new Administrar_Artistas("./Astista.cana");
        aa.cargarArchivo();
             Object o= modelo.getSelectedItem();
             String t="";
             t+=o;
             ArrayList<Canciones>c=new ArrayList();
             boolean tt=false;
             int indie=0;
             for (int i = 0; i < ap.getListaPlaylists().size(); i++) {
                 if(ap.getListaPlaylists().get(i).getNombre().equalsIgnoreCase(t)){
                     tt=true;
                     indie=i;
                 }
             }
             if(tt){
                 for (int i = 0; i < ap.getListaPlaylists().get(i).getC().size(); i++) {
                      for (int j = 0; j < aa.getListaArtistas().size(); j++) {
                            for (int v = 0; v < aa.getListaArtistas().get(i).getA().size(); v++) {
                                if(aa.getListaArtistas().get(i).getA().get(v).getGeneroM().equalsIgnoreCase(t)){
                                    for (int k = 0; k < aa.getListaArtistas().get(i).getA().get(v).getC().size(); k++) {
                                        if(aa.getListaArtistas().get(i).getA().get(v).getC().get(k).getNom().equalsIgnoreCase(ap.getListaPlaylists().get(indie).getC().get(i).getNom())){
                                            
                                        }else{
                                            c.add(aa.getListaArtistas().get(i).getA().get(v).getC().get(k));
                                        }
                                    }
                                }
                            }
                      }
                 }
                 ap.getListaPlaylists().get(indie).getC().addAll(c);
             }else{
                 for (int i = 0; i < aa.getListaArtistas().size(); i++) {
                     for (int j = 0; j < aa.getListaArtistas().get(i).getA().size(); j++) {
                         if(aa.getListaArtistas().get(i).getA().get(j).getGeneroM().equalsIgnoreCase(t)){
                             for (int k = 0; k < aa.getListaArtistas().get(i).getA().get(j).getC().size(); k++) {
                                 c.add(aa.getListaArtistas().get(i).getA().get(j).getC().get(k));
                             }
                         }
                     }
                 }
                 ap.getListaPlaylists().add(new Playlist(t,c));
             }
             ap.escribirArchivo();
             ap.cargarArchivo();
             DefaultListModel modelolista = new  DefaultListModel();
             for (int i = 0; i < ap.getListaPlaylists().size(); i++) {
                 if(ap.getListaPlaylists().get(i).getNombre().equalsIgnoreCase(t)){
                     indie=i;
                 }
             }
             
             for (int i = 0; i < ap.getListaPlaylists().get(indie).getC().size(); i++) {
                 modelolista.addElement(ap.getListaPlaylists().get(indie).getC().get(i));
             }
             JL_PlayList.setModel(modelolista);
         }
        
    }//GEN-LAST:event_CB_generosItemStateChanged

    private void JB_PlayListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_PlayListMouseClicked
        // TODO add your handling code here:
        Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        ap.cargarArchivo();
        DefaultComboBoxModel modelo =new DefaultComboBoxModel();
         for (int i = 0; i < ap.getListaArtistas().size(); i++) {
             for (int j = 0; j < ap.getListaArtistas().get(i).getA().size(); j++) {
                 modelo.addElement(ap.getListaArtistas().get(i).getA().get(j).getGeneroM());
             }
         }
         CB_generos.setModel(modelo);
        JDPLAYLIST();
    }//GEN-LAST:event_JB_PlayListMouseClicked

    private void JB_CancionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_CancionesMouseClicked
        // TODO add your handling code here:
        JDCANCIONES();
    }//GEN-LAST:event_JB_CancionesMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        DefaultComboBoxModel modelo =(DefaultComboBoxModel) CB_generos.getModel();
        Administrar_Playlist ap = new Administrar_Playlist("./Playlist.cana");
              ap.cargarArchivo();
               Administrar_Artistas aa = new Administrar_Artistas("./Astista.cana");
        aa.cargarArchivo();
             Object o= modelo.getSelectedItem();
             String t="";
             t+=o;
             ArrayList<Canciones>c=new ArrayList();
             boolean tt=false;
             int indie=0;
             for (int i = 0; i < ap.getListaPlaylists().size(); i++) {
                 if(ap.getListaPlaylists().get(i).getNombre().equalsIgnoreCase(t)){
                     tt=true;
                     indie=i;
                 }
             }
             if(tt){
                 for (int i = 0; i < ap.getListaPlaylists().get(i).getC().size(); i++) {
                      for (int j = 0; j < aa.getListaArtistas().size(); j++) {
                            for (int v = 0; v < aa.getListaArtistas().get(i).getA().size(); v++) {
                                if(aa.getListaArtistas().get(i).getA().get(v).getGeneroM().equalsIgnoreCase(t)){
                                    for (int k = 0; k < aa.getListaArtistas().get(i).getA().get(v).getC().size(); k++) {
                                        if(aa.getListaArtistas().get(i).getA().get(v).getC().get(k).getNom().equalsIgnoreCase(ap.getListaPlaylists().get(indie).getC().get(i).getNom())){
                                            
                                        }else{
                                            c.add(aa.getListaArtistas().get(i).getA().get(v).getC().get(k));
                                        }
                                    }
                                }
                            }
                      }
                 }
                 ap.getListaPlaylists().get(indie).getC().addAll(c);
             }else{
                 for (int i = 0; i < aa.getListaArtistas().size(); i++) {
                     for (int j = 0; j < aa.getListaArtistas().get(i).getA().size(); j++) {
                         if(aa.getListaArtistas().get(i).getA().get(j).getGeneroM().equalsIgnoreCase(t)){
                             for (int k = 0; k < aa.getListaArtistas().get(i).getA().get(j).getC().size(); k++) {
                                 c.add(aa.getListaArtistas().get(i).getA().get(j).getC().get(k));
                             }
                         }
                     }
                 }
                 ap.getListaPlaylists().add(new Playlist(t,c));
             }
             ap.escribirArchivo();
             ap.cargarArchivo();
             DefaultListModel modelolista = new  DefaultListModel();
             for (int i = 0; i < ap.getListaPlaylists().size(); i++) {
                 if(ap.getListaPlaylists().get(i).getNombre().equalsIgnoreCase(t)){
                     indie=i;
                 }
             }
             
             for (int i = 0; i < ap.getListaPlaylists().get(indie).getC().size(); i++) {
                 modelolista.addElement(ap.getListaPlaylists().get(indie).getC().get(i));
             }
             JL_PlayList.setModel(modelolista);
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
     public void JDArtista(){
        JD_Artistas.pack();
        JD_Artistas.setModal(true);
        JD_Artistas.setLocationRelativeTo(this);
        JD_Artistas.setVisible(true);
    }
     public void JDALBUMS(){
        JD_Albums.pack();
        JD_Albums.setModal(true);
        JD_Albums.setLocationRelativeTo(this);
        JD_Albums.setVisible(true);
    }
     public void JDPLAYLIST(){
        JD_ListaPlaylist.pack();
        JD_ListaPlaylist.setModal(true);
        JD_ListaPlaylist.setLocationRelativeTo(this);
        JD_ListaPlaylist.setVisible(true);
    }
     public void JDCANCIONES(){
        JD_Canciones.pack();
        JD_Canciones.setModal(true);
        JD_Canciones.setLocationRelativeTo(this);
        JD_Canciones.setVisible(true);
    }
     public void playlist(){
         Administrar_Artistas ap = new Administrar_Artistas("./Astista.cana");
        ap.cargarArchivo();
        DefaultComboBoxModel modelo =new DefaultComboBoxModel();
         for (int i = 0; i < ap.getListaArtistas().size(); i++) {
             for (int j = 0; j < ap.getListaArtistas().get(i).getA().size(); j++) {
                 modelo.addElement(ap.getListaArtistas().get(i).getA().get(j).getGeneroM());
             }
         }
     }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Startup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ArtistasExtra;
    private javax.swing.JComboBox<String> CB_generos;
    private javax.swing.ButtonGroup Exclusivo;
    private javax.swing.ButtonGroup Formato_p;
    private javax.swing.JButton JB_AArtista;
    private javax.swing.JButton JB_AgregarAlbumaA;
    private javax.swing.JButton JB_AgregarAlbums;
    private javax.swing.JButton JB_AgregarCancionaA1;
    private javax.swing.JButton JB_Agregar_Cancion;
    private javax.swing.JButton JB_Albums;
    private javax.swing.JButton JB_Artistas;
    private javax.swing.JButton JB_Canciones;
    private javax.swing.JButton JB_EliminarAlbums;
    private javax.swing.JButton JB_EliminarAlbums_d_A;
    private javax.swing.JButton JB_EliminarArtista;
    private javax.swing.JButton JB_EliminarArtista4;
    private javax.swing.JButton JB_EliminarCanciones;
    private javax.swing.JButton JB_ModificarAlbums;
    private javax.swing.JButton JB_ModificarAlbums_d_A;
    private javax.swing.JButton JB_ModificarArtista;
    private javax.swing.JButton JB_ModificarArtista4;
    private javax.swing.JButton JB_ModificarCaciones;
    private javax.swing.JButton JB_PlayList;
    private javax.swing.JButton JB_SalirSys;
    private javax.swing.JButton JB_simula;
    private javax.swing.JDialog JD_Albums;
    private javax.swing.JDialog JD_Artistas;
    private javax.swing.JDialog JD_Canciones;
    private javax.swing.JDialog JD_ListaPlaylist;
    private javax.swing.JList<String> JL_Albums;
    private javax.swing.JList<String> JL_Artista;
    private javax.swing.JList<String> JL_Artista1;
    private javax.swing.JList<String> JL_Artistas2;
    private javax.swing.JList<String> JL_Canciones;
    private javax.swing.JList<String> JL_PlayList;
    private javax.swing.JRadioButton RB_CD;
    private javax.swing.JRadioButton RB_digital;
    private javax.swing.JRadioButton RB_exNo;
    private javax.swing.JRadioButton RB_exSi;
    private javax.swing.JRadioButton RB_extraNo1;
    private javax.swing.JRadioButton RB_extraSi1;
    private javax.swing.JRadioButton RB_instru;
    private javax.swing.JRadioButton RB_voz;
    private javax.swing.JTextField TF_Alias;
    private javax.swing.JTextField TF_Alias1;
    private javax.swing.JTextField TF_DuracionC;
    private javax.swing.JTextField TF_Fecha_p;
    private javax.swing.JTextField TF_GeneroM;
    private javax.swing.JTextField TF_GeneroM1;
    private javax.swing.JTextField TF_N_Disco;
    private javax.swing.JTextField TF_Nombre;
    private javax.swing.JTextField TF_Nombre1;
    private javax.swing.JTextField TF_Nombre2;
    private javax.swing.JTextField TF_NombreC;
    private javax.swing.JTextField TF_NombreD;
    private javax.swing.JTextField TF_NombreP;
    private javax.swing.ButtonGroup Tipo_de_musica;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
